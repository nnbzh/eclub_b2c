<?php

namespace App\Http\Controllers\Admin;

use App\Models\Permission;

class RoleCrudController extends BaseCrudController
{
    protected function setupListOperation()
    {
        parent::setupListOperation(); // TODO: Change the autogenerated stub
        $this->crud->query->withCount('users');
        $this->crud->addColumn([
            'label'     => trans('backpack::permissionmanager.users'),
            'type'      => 'text',
            'name'      => 'users_count',
            'wrapper'   => [
                'href' => function ($crud, $column, $entry, $related_key) {
                    return backpack_url('user?role='.$entry->getKey());
                },
            ],
            'suffix'    => ' '.strtolower(trans('backpack::permissionmanager.users')),
        ]);
        $this->crud->addColumn([
            // n-n relationship (with pivot table)
            'label'     => mb_ucfirst(trans('backpack::permissionmanager.permission_plural')),
            'type'      => 'select_multiple',
            'name'      => 'permissions', // the method that defines the relationship in your Model
            'entity'    => 'permissions', // the method that defines the relationship in your Model
            'attribute' => 'name', // foreign key attribute that is shown to user
            'model'     => Permission::class, // foreign key model
            'pivot'     => true,
        ]);
    }

    protected function setupCreateOperation()
    {
        parent::setupCreateOperation(); // TODO: Change the autogenerated stub
        $this->crud->addField([
            'label'     => mb_ucfirst(trans('backpack::permissionmanager.permission_plural')),
            'type'      => 'checklist_grouped',
            'name'      => 'permissions',
            'entity'    => 'permissions',
            'attribute' => 'translated_name',
            'group_by'  => 'model',
            'model'     => Permission::class,
            'pivot'     => true,
        ]);
    }
}
